from src.exceptions import (
    ArgumentError,
    MissingArgumentError,
    MissingUrlError,
    BadArgumentError,
)
from tests import TEST_URL, TEST_DIR_PATH, TestCase

negative_tests = [
    TestCase(
        name="No arguments",
        args=[],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=MissingUrlError,
    ),
    TestCase(
        name="Wrong argument",
        args=["r", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=ArgumentError,
    ),
    TestCase(
        name="Recursive - invalid argument",
        args=["-r", "6", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=ArgumentError,
    ),
    TestCase(
        name="Recursive with missing specified depth",
        args=["-r", "-l", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=MissingArgumentError,
    ),
    TestCase(
        name="Recursive with missing specified depth - different arg order",
        args=["-l", "-r", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=BadArgumentError,
    ),
    TestCase(
        name="Recursive with bad specified depth",
        args=["-r", "-l", "a", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=BadArgumentError,
    ),
    TestCase(
        name="Recursive with invalid (too large) specified depth",
        args=["-r", "-l", "--zzzzzzzzxxxxhxhxsxuiashx78asxhaxuhsa9x04234", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=BadArgumentError,
    ),
    TestCase(
        name="Specified depth only - missing argument",
        args=["-l", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=MissingArgumentError,
    ),
    TestCase(
        name="Specified depth only - bad argument",
        args=["-l", "a", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=BadArgumentError,
    ),
    TestCase(
        name="Specified path only - missing argument",
        args=["-p", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=MissingArgumentError,
    ),
    TestCase(
        name="Specified path only - invalid directory",
        args=["-p", ".//////////sdf/sd/f/sdf", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=BadArgumentError,
    ),
    TestCase(
        name="Recursive with specified depth (6) - invalid arg order",
        args=["-r", 6, "-l", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=ArgumentError,
    ),
    TestCase(
        name="Recursive with specified depth (7) - invalid argument",
        args=["-r", 6, "-l", 7, TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=ArgumentError,
    ),
    TestCase(
        name="Recursive with specified path - missing argument",
        args=["-r", "-p", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=MissingArgumentError,
    ),
    TestCase(
        name="Specified path and depth - missing depth argument",
        args=["-p", TEST_DIR_PATH, "-l", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=MissingArgumentError,
    ),
    TestCase(
        name="Recursive with negative specified depth",
        args=["-r", "-l", "-3", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=BadArgumentError,
    ),
    TestCase(
        name="Recursive with specified depth equal to zero",
        args=["-r", "-l", "0", TEST_URL],
        should_raise_exception=True,
        expected_result=None,
        expected_exception=BadArgumentError,
    ),
]
